{
	"config": {},
	"libraries": [
		"../examples/js/libs/three.min.js"
	],
	"includes": [
		[
			"Renderer",
			[
				"var dom = resources.get( 'dom' );",
				"",
				"var renderer = new THREE.WebGLRenderer();",
				"renderer.autoClear = false;",
				"renderer.setPixelRatio( window.devicePixelRatio );",
				"renderer.setSize( dom.clientWidth, dom.clientHeight );",
				"dom.appendChild( renderer.domElement );",
				"",
				"window.addEventListener( 'resize', function () {",
				"\t",
				"\trenderer.setSize( dom.clientWidth, dom.clientHeight );",
				"\t",
				"} );",
				"",
				"resources.set( 'renderer', renderer );"
			]
		]
	],
	"effects": [
    [
			"Audio Player",
			[
				"var audio = document.createElement( 'audio' );",
				"audio.src = '../examples/files/lug00ber-bastion_amstel.mp3';",
				"",
				"function start(){",
				"",
				"\tplayer.setAudio( audio );",
				"",
				"}",
				"",
				"function end(){",
				"",
				"\tplayer.setAudio( null );",
				"",
				"}",
				"",
				"function update( progress ){}"
			]
		],
		[
			"Dancing Cube",
			[
				"var dom = resources.get( 'dom' );",
				"",
				"var renderer = resources.get( 'renderer' );",
				"",
				"var camera = new THREE.PerspectiveCamera( 50, dom.clientWidth / dom.clientHeight, 0.1, 100 );",
				"camera.position.z = 5;",
				"",
				"window.addEventListener( 'resize', function () {",
				"\tcamera.aspect = dom.clientWidth / dom.clientHeight;",
				"\tcamera.updateProjectionMatrix();",
				"} );",
				"",
				"",
				"var scene = new THREE.Scene();",
				"var mesh = new THREE.Mesh(",
				"\tnew THREE.BoxGeometry( 1, 1, 1, 2, 2, 2 ),",
				"\tnew THREE.MeshBasicMaterial( { color: 0xFF7F00, wireframe: false} )",
				");",
				"scene.add( mesh );",
				"var initialx = -1.6;",
				"var initialy = 0;",
				"var initialz = -1.6",
        "mesh.position.set(initialx, initialy, initialz);",
				"",
				"function start(){}",
				"",
				"function update( progress ){",
				"",
				"\tmesh.rotation.y = progress * Math.PI * -6;",
        "\tmesh.position.set(initialx + 4 * progress, initialy, initialz + 4 * progress);",
				"\trenderer.render( scene, camera );",
				"\tconsole.log(progress);",
				"",
				"}"
			]
  	],
    [
			"Stage",
			[
				"var dom = resources.get( 'dom' );",
				"",
				"var renderer = resources.get( 'renderer' );",
				"",
				"var camera = new THREE.PerspectiveCamera( 50, dom.clientWidth / dom.clientHeight, 0.1, 100 );",
				"camera.position.z = 5;",
        "camera.updateProjectionMatrix();",
				"",
				"window.addEventListener( 'resize', function () {",
				"\tcamera.aspect = dom.clientWidth / dom.clientHeight;",
				"} );",
				"",
				"",
				"var scene = new THREE.Scene();",
				"var mesh = new THREE.Mesh(",
				"\tnew THREE.CubeGeometry( 4, 0.25, 2, 1, 1, 1 ),",
				"\tnew THREE.MeshBasicMaterial( { color: 0xc6FFD2, wireframe: true } )",
				");",
        "mesh.position.set(0, -0.75, 0);",
				"scene.add( mesh );",
				"",
				"function start(){}",
				"",
				"function update( progress ){",
				"",
				"\trenderer.render( scene, camera );",
				"",
				"}"
			]
  	]
	],
	"animations": [
    [
			"Audio Player",
			0,
			71,
			0,
			0,
			true
		],
		[
			"Dancing Cube",
			0,
			16,
			1,
			1,
			true
		],
		[
			"Stage",
			0,
			16,
			2,
			2,
			false
		]
	]
}
