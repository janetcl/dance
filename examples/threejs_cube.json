{
	"config": {},
	"libraries": [
		"../examples/js/libs/three.min.js"
	],
	"includes": [
		[
			"Renderer",
			[
				"var dom = resources.get( 'dom' );",
				"",
				"var renderer = new THREE.WebGLRenderer();",
				"renderer.autoClear = false;",
				"renderer.setPixelRatio( window.devicePixelRatio );",
				"renderer.setSize( dom.clientWidth, dom.clientHeight );",
				"dom.appendChild( renderer.domElement );",
				"",
				"window.addEventListener( 'resize', function () {",
				"\t",
				"\trenderer.setSize( dom.clientWidth, dom.clientHeight );",
				"\t",
				"} );",
				"",
				"resources.set( 'renderer', renderer );"
			]
		]
	],
	"effects": [
		[
			"Clear",
			[
				"var parameters = {",
				"\tcolor: new FRAME.Parameters.Color( 'Color', 0x000000 )",
				"};",
				"",
				"var renderer = resources.get( 'renderer' );",
				"",
				"function start() {",
				"",
				"\trenderer.setClearColor( parameters.color.value );",
				"",
				"}",
				"",
				"function update( progress ) {",
				"",
				"\trenderer.clear();",
				"",
				"}"
			]
		],
		[
			"Cube",
			[
				"var dom = resources.get( 'dom' );",
				"",
				"var renderer = resources.get( 'renderer' );",
				"",
				"var camera = new THREE.PerspectiveCamera( 50, dom.clientWidth / dom.clientHeight, 0.1, 100 );",
				"camera.position.z = 5;",
				"",
				"window.addEventListener( 'resize', function () {",
				"\tcamera.aspect = dom.clientWidth / dom.clientHeight;",
				"\tcamera.updateProjectionMatrix();",
				"} );",
				"",
				"",
				"var scene = new THREE.Scene();",
				"var mesh = new THREE.Mesh(",
				"\tnew THREE.CubeGeometry( 1, 1, 2, 2, 2, 2 ),",
				"\tnew THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } )",
				");",
				"scene.add( mesh );",
				"",
				"function start(){}",
				"",
				"function update( progress ){",
				"",
				"\tcamera.position.z = 5.0 * progress;",
				"\tcamera.rotation.z = progress;",
				"\tmesh.rotation.y = progress * Math.PI * 2;",
				"\trenderer.render( scene, camera );",
				"",
				"}"
			]
		],
		[
			"Fade Out",
			[
				"var parameters = {",
				"\tcolor:   new FRAME.Parameters.Color( 'Color', 0xffffff ),",
				"\topacity: new FRAME.Parameters.Float( 'Opacity', 1, 0, 1 )",
				"};",
				"",
				"var renderer = resources.get( 'renderer' );",
				"",
				"var camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );",
				"var scene = new THREE.Scene();",
				"var mesh = new THREE.Mesh(",
				"\tnew THREE.PlaneGeometry( 2, 2 ),",
				"\tnew THREE.MeshBasicMaterial( { transparent: true } )",
				");",
				"scene.add( mesh );",
				"",
				"function start(){}",
				"",
				"function update( progress ){",
				"",
				"\tmesh.material.color.setHex( parameters.color.value );",
				"\tmesh.material.opacity = parameters.opacity.value * ( 1 - progress );",
				"\trenderer.render( scene, camera );",
				"",
				"}"
			]
		]
	],
	"animations": [
		[
			"",
			0,
			9,
			0,
			0,
			true
		],
		[
			"",
			0,
			16,
			1,
			1,
			true
		],
		[
			"",
			4.5,
			7.5,
			2,
			2,
			true
		]
	]
}
